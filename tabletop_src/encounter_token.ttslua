#include config
#include utils

local tags_to_add = {}

function _add_location_tags(player_colour)
  local player_trainer_token = getObjectFromGUID(PLAYER_TRAINER_TOKEN_GUIDS[player_colour])
  if not player_trainer_token then
    print("Trainer " .. player_colour .. " token not found")
    return
  end

  local hit_list = Physics:cast({
    origin       = player_trainer_token:getPosition(),
    direction    = {0, -1, 0},
    max_distance = 1
  })

  for _, hit_info in pairs(hit_list) do
    local hit_object = hit_info.hit_object
    if hit_object:hasTag(WILD_AREA_TAG) then
      table.insert(tags_to_add, get_biome_tag(hit_object:getTags()))
      table.insert(tags_to_add, get_climate_tag(hit_object:getTags()))
      if hit_object:hasTag(DANGER_TAG) then
        table.insert(tags_to_add, DANGER_TAG)
      end
      break
    end
  end
end

function _add_tier_tag(player_colour)
  local lake_crystal_count
  local player_control_panel = getObjectFromGUID(PLAYER_CONTROL_PANEL_GUIDS[player_colour])
  if not player_control_panel then
    print("Trainer " .. player_colour .. " control panel not found")
    lake_crystal_count = 0
  else
    lake_crystal_count = player_control_panel:call("count_lake_crystals")
  end
  if self:hasTag(DANGER_TAG) then
    lake_crystal_count = lake_crystal_count + 1
  end
  local tier_tag = TIER_TAGS[lake_crystal_count + 1]
  if tier_tag then table.insert(tags_to_add, tier_tag) end
end

-- function onSave()
--   self:highlightOff()
--   remove_tags(self, tags_to_add)
-- end

function onPickUp(player_colour)
  self:highlightOn(player_colour)

  if not get_biome_tag(self:getTags()) and not get_climate_tag(self:getTags()) then
    _add_location_tags(player_colour)
  end
  add_tags(self, tags_to_add)

  if not get_tier_tag(self:getTags()) then
    _add_tier_tag(player_colour)
  end
  add_tags(self, tags_to_add)
end

function onDrop()
  Wait.frames(function()
    self:highlightOff()
    remove_tags(self, tags_to_add)
    tags_to_add = {}
  end, 300)
end
