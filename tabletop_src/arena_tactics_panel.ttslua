#include config
#include utils

local active_zone = getObjectFromGUID(active_zone_guid)
local pokemon_zone = getObjectFromGUID(pokemon_zone_guid)

function onLoad()
  ultra_burst_prism_armour_zone = getObjectFromGUID(config.guids.ULTRA_BURST_PRISM_ARMOUR_ZONE)
  ultra_beast_prism_armour_zone = getObjectFromGUID(config.guids.ULTRA_BEAST_PRISM_ARMOUR_ZONE)

  text_params = {
    click_function = "dummy_button",
    function_owner = self,
    position       = {0.195, -0.03, 0.365},
    rotation       = {0, 180, 180},
    scale          = {0.25, 1, 0.25},
    width          = 0,
    height         = 0,
    font_size      = 200,
    font_color     = {225/255, 150/255, 250/255}
  }
  self:createButton(text_params)

  button_params = {
    function_owner = self,
    scale          = {0.25, 1, 0.25},
    width          = 500,
    height         = 500,
    font_size      = 200,
    font_color     = {1, 1, 1}
  }
  -- SHELVED
  -- -- Return Button
  -- button_params.click_function = "return_button"
  -- button_params.color = {0, 1, 0}
  -- self:createButton(button_params)
  -- -- Discard Button
  -- button_params.click_function = "discard_button"
  -- button_params.color = {1, 0, 0}
  -- self:createButton(button_params)

  update_panel()
end

--
--
--

-- SHELVED
-- function return_button()
-- end
--
-- function discard_button()
-- end

function get_held_item()
  local objects = pokemon_zone:getObjects()
  for _, object in pairs(objects) do
    if object:hasTag(config.tags.items.HELD) then
      return object
    end
  end
end

function update_prism_armour(zone)
  if zone then
    local prism_armour_count = len(zone:getObjects())
    local prism_armour_label = "-" .. math.floor(prism_armour_count / 2)
    self:editButton({index=0, label=prism_armour_label})
  else
    self:editButton({index=0, label=""})
  end
end

-- SHELVED
-- function update_buttons()
--   print(get_y_dir(self) .. ", " .. get_z_dir(self))
--   self:editButton({
--     index     = 1,
--     position  = {get_y_dir(self) * get_z_dir(self) * 0.5, 0, get_y_dir(self) * 0.5},
--     rotation  = {0, 0, 180}
--   })
--   self:editButton({
--     index     = 2,
--     position  = {get_y_dir(self) * get_z_dir(self) * 0.5, 0, get_y_dir(self) * 0.25},
--     rotation  = {0, 0, 180}
--   })
-- end

--
--
--

function update_panel()
  function update_panel_coroutine()
    coroutine.yield(0)
    local pokemon = get_object(active_zone)
    local held_item = get_held_item()
    if pokemon and (pokemon:hasTag(config.tags.encounters.GALACTIC_GRUNT) or pokemon:hasTag(config.tags.encounters.GALACTIC_COMMANDER) or pokemon:hasTag(config.tags.encounters.GALACTIC_BOSS)) then
      self:setPosition(Vector(self:getPosition().x, 2.07, self:getPosition().z))
      self:setRotation(Vector(self:getRotation().x, active_zone:getRotation().y, 180))
    elseif pokemon and (pokemon:hasTag(config.tags.encounters.LEGENDARY) or pokemon:hasTag(config.tags.encounters.ULTRA_BEAST) or pokemon:hasTag(config.tags.encounters.ULTRA_BURST) or (held_item and held_item:getName() == "Alpha Pok√©mon")) then
      self:setPosition(Vector(self:getPosition().x, 2.07, self:getPosition().z))
      self:setRotation(Vector(self:getRotation().x, active_zone:getRotation().y + 180, 180))
      -- Update Prism Armour
      if pokemon:hasTag(config.tags.encounters.ULTRA_BEAST) then
        update_prism_armour(ultra_beast_prism_armour_zone)
      elseif pokemon:hasTag(config.tags.encounters.ULTRA_BURST) then
        update_prism_armour(ultra_burst_prism_armour_zone)
      end
    else
      self:setPosition(Vector(self:getPosition().x, 1.97, self:getPosition().z))
      self:setRotation(Vector(self:getRotation().x, active_zone:getRotation().y, 0))
      update_prism_armour()
    end

    -- SHELVED
    --update_buttons()

    return 1
  end
  startLuaCoroutine(self, "update_panel_coroutine")
end
