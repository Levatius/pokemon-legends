#include config
#include utils

function onload()
  print("Root Loaded")
end

function onObjectEnterScriptingZone(zone, enter_object)
  -- Arena Active Zone Enter
  if contains(ARENA_ACTIVE_ZONE_GUIDS, zone:getGUID()) then
    if enter_object:hasTag(POKEMON_CARD_TAG) and enter_object.type == "Card" then
      for _, arena_control_panel_guid in pairs(ARENA_CONTROL_PANEL_GUIDS) do
        local arena_control_panel = getObjectFromGUID(arena_control_panel_guid)

        if arena_control_panel:getVar("our_active_zone_guid") == zone:getGUID() then
          arena_control_panel:call("deploy_model")
        end

        Wait.frames(arena_control_panel:getVar("update_ui"), 30)
      end
    end

    local pokemon_cards = find_objects_with_tag(zone, POKEMON_CARD_TAG)
    for _, pokemon_card in pairs(pokemon_cards) do
      if pokemon_card.type == "Card" then
        pokemon_card:call("update_stats", zone)
      end
    end
  end
end

function onObjectLeaveScriptingZone(zone, leave_object)
  -- Arena Active Zone Leave
  if contains(ARENA_ACTIVE_ZONE_GUIDS, zone:getGUID()) then
    if leave_object:hasTag(POKEMON_CARD_TAG) and leave_object.type == "Card" then
      for _, arena_control_panel_guid in pairs(ARENA_CONTROL_PANEL_GUIDS) do
        local arena_control_panel = getObjectFromGUID(arena_control_panel_guid)

        if arena_control_panel:getVar("our_active_zone_guid") == zone:getGUID() then
          arena_control_panel:call("undeploy_model")
        end

        Wait.frames(arena_control_panel:getVar("update_ui"), 30)
      end

      leave_object:call("update_stats")
    end
  end
end
