#include config
#include utils
#include events/arena
#include events/battle_token
#include events/evolution
#include events/music
#include events/player

function onload()
  print("Root Loaded")
end

-- Scripting Zone Events
function onObjectEnterScriptingZone(zone, object)
  if contains(ARENA_ACTIVE_ZONE_GUIDS, zone:getGUID()) then
    arena_events.on_enter_active_zone(zone, object)
  elseif contains(ARENA_BATTLE_TOKEN_GUIDS, zone:getGUID()) then
    battle_token_events.on_enter_zone(zone, object)
  elseif zone:hasTag(LAKE_CRYSTAL_TOKEN_TAG) then
    player_events.on_enter_lake_crystal_zone(zone, object)
  elseif zone:hasTag(MUSIC_CARTRIDGE_TAG) then
    music_events.on_enter_music_cartridge_zone(zone, object)
  end
end

function onObjectLeaveScriptingZone(zone, object)
  if contains(ARENA_ACTIVE_ZONE_GUIDS, zone:getGUID()) then
    arena_events.on_leave_active_zone(zone, object)
  elseif contains(ARENA_BATTLE_TOKEN_GUIDS, zone:getGUID()) then
    battle_token_events.on_leave_zone(zone, object)
  elseif zone:hasTag(LAKE_CRYSTAL_TOKEN_TAG) then
    player_events.on_leave_lake_crystal_zone(zone, object)
  end
end

-- Container Events
function tryObjectEnterContainer(container, object)
  if container:hasTag(POKEMON_MODEL_TAG) then
    return object:hasTag(POKEMON_MODEL_TAG)
  end
  return true
end

function onObjectEnterContainer(container, object)
  if container:getName() == POUCH_NAME then
    player_events.on_enter_pouch(container)
  end
end

function onObjectLeaveContainer(container, object)
  if container:getName() == POUCH_NAME then
    player_events.on_leave_pouch(container)
  end
end

-- function onObjectEnterZone(zone, object)
--   if zone:hasTag(POKEMON_CARD_TAG) and object:hasTag(POKEMON_CARD_TAG) and not object.is_face_down then
--     object:registerCollisions()
--   end
-- end

-- Rotation Events
function onObjectRotate(object)
  if object:hasTag(POKEMON_CARD_TAG) and not object.is_face_down then
    arena_events.on_rotate_pokemon_card(pokemon_card)
  elseif object:hasTag(STATUS_TOKEN_TAG) then
    arena_events.on_rotate_status_token(object)
  end
end

-- Collision Events
function onObjectCollisionEnter(hit_object, collision_info)
  local collision_object = collision_info.collision_object
  if hit_object:hasTag(POKEMON_CARD_TAG) and hit_object.type == "Card" then
    evolution_events.on_collision_with_pokemon_card(hit_object, collision_object)
  end
end
