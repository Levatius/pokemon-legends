function dummy_button() end

function find_first_index(t, value)
  for i, value_ in pairs(t) do
    if value_ == value then
      return i
    end
  end
end

function contains(t, value)
  local first_index = find_first_index(t, value)
  return first_index != nil
end

function find_objects_with_tag(zone, tag)
  local objects_with_tag = {}
  for _, object in pairs(zone:getObjects()) do
    if object:hasTag(tag) then
      table.insert(objects_with_tag, object)
    end
  end
  return objects_with_tag
end

function equals_any(value, t)
  for _, value_ in pairs(t) do
    if value == value_ then
      return true
    end
  end
  return false
end

function equals_all(value, t)
  for _, value_ in pairs(t) do
    if value ~= value_ then
      return false
    end
  end
  return true
end

local function reversedipairsiter(t, i)
    i = i - 1
    if i ~= 0 then return i, t[i] end
end
function reversedipairs(t) return reversedipairsiter, t, #t + 1 end

function get_object_infos_from_zone_deck(zone, shuffle)
  local zone_objects = zone:getObjects()
  if not zone_objects then return end
  -- Get first object in zone as the zone deck
  local zone_deck = zone_objects[1]
  if not zone_deck then return end

  if zone_deck.type == "Card" then
    return {{
      description = zone_deck:getDescription(),
      gm_notes = zone_deck:getGMNotes(),
      guid = zone_deck:getGUID(),
      index = 1,
      lua_script = zone_deck:getLuaScript(),
      lua_script_state = zone_deck.script_state,
      memo = zone_deck.memo,
      name = zone_deck:getName(),
      tags = zone_deck:getTags()
    }}
  elseif zone_deck.type == "Deck" then
    if shuffle then zone_deck:randomize() end
    return zone_deck:getObjects()
    end
end

function take_object_from_zone_deck(zone, params)
  local zone_objects = zone:getObjects()
  if not zone_objects then return end
  -- Get first object in zone as the zone deck
  local zone_deck = zone_objects[1]
  if not zone_deck then return end

  if zone_deck.type == "Card" then
    zone_deck:setPositionSmooth(params.position, false, true)
    zone_deck:setRotationSmooth(params.rotation, false, true)
  elseif zone_deck.type == "Deck" then
    zone_deck:takeObject(params)
  end
end

function put_object_into_zone_deck(zone, object)
  local zone_objects = zone:getObjects()
  if not zone_objects then return end
  -- Get first object in zone as the zone deck
  local zone_deck = zone_objects[1]

  if not zone_deck then
    object:setPositionSmooth(zone:getPosition(), false, true)
    object:setRotationSmooth(zone:getRotation(), false, true)
  elseif zone_deck.type == "Card" or zone_deck.type == "Deck" then
    object:setPosition(zone_deck:getPosition() + Vector(0, 5, 0))
    zone_deck:putObject(object)
  end
end
