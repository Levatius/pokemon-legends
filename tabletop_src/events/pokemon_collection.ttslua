pokemon_collection = {}

local sort_coroutine_running = false

function pokemon_collection._get_zone_guid_from_tags(card_tags)
  if contains(card_tags, EVOLUTION_CARD_TAG) then
    return ENCOUNTER_EVOLUTION_ZONE_GUID
  elseif contains(card_tags, LEGENDARY_CARD_TAG) then
    return ENCOUNTER_LEGENDARY_ZONE_GUID
  elseif contains(card_tags, PWO_CARD_TAG) then
    return ENCOUNTER_PWO_ZONE_GUID
  else
    return ENCOUNTER_REGULAR_ZONE_GUID
  end
end

function pokemon_collection.on_enter_sort_zone(zone, object)
  function sortCoroutine()
    sort_coroutine_running = true
    local pokemon_card_infos = get_object_infos_from_zone_deck(zone)

    for _, pokemon_card_info in reversedipairs(pokemon_card_infos) do
      local card_tags = pokemon_card_info.tags
      local card_guid = pokemon_card_info.guid
      local encounter_zone_guid = pokemon_collection._get_zone_guid_from_tags(card_tags)
      local encounter_zone = getObjectFromGUID(encounter_zone_guid)

      if encounter_zone_guid ~= ENCOUNTER_REGULAR_ZONE_GUID then
        take_object_from_zone_deck(zone, {
          position = encounter_zone:getPosition() + Vector(0, 5, 0),
          rotation = encounter_zone:getRotation(),
          guid     = card_guid
        })
      else
        local biome_tag = get_biome_tag(card_tags)
        local climate_tag = get_climate_tag(card_tags)
        local x_offset = 2.9 * (find_first_index(BIOME_TAGS, biome_tag) - 3)
        local z_offset = -4.8 * (find_first_index(CLIMATE_TAGS, climate_tag) - 2)
        take_object_from_zone_deck(zone, {
          position = encounter_zone:getPosition() + Vector(x_offset, 5, z_offset),
          rotation = encounter_zone:getRotation(),
          guid     = card_guid
        })
      end
      brief_pause()
    end
    sort_coroutine_running = false
    return 1
  end
  if not sort_coroutine_running then startLuaCoroutine(self, "sortCoroutine") end
end
